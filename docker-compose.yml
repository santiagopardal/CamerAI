version: "2.1"
services:
  camerairabbit:
    image: rabbitmq:3.12-management-alpine
    container_name: camerairabbit
    restart: unless-stopped
    ports:
      - 15672:15672
  camerapidatabase:
    image: postgres:15-alpine
    container_name: camerapidatabase
    restart: unless-stopped
    environment:
      POSTGRES_DB: camerapi
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - "./pgdata:/var/lib/postgresql/data"
  camerapi:
    build:
      context: ./CamerAPI
      dockerfile: Dockerfile
    container_name: camerapi
    restart: unless-stopped
    env_file: ./CamerAPI/.env
    ports:
      - "8080:8080"
    volumes:
      - "./CamerAPI/temporal_videos:/camerapi/temporal_videos"
      - "./CamerAPI/.env:/camerapi/.env"
  camerai:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: camerai
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PYTHONPATH=/camerai/src
    ports:
      - "5460:5460"
    volumes:
      - "./Images:/camerai/Images"
      - "./camerai.log:/camerai/camerai.log"
      - "./.env:/camerai/.env"
  cameraivideosprocessor:
    build:
      context: ./VideosProcessor
      dockerfile: Dockerfile.dev
    container_name: cameraivideosprocessor
    restart: unless-stopped
    env_file:
      - ./VideosProcessor/.env
  camerapp:
    build:
      context: ./CamerAPP/camerapp
      dockerfile: Dockerfile
    container_name: camerapp
    restart: unless-stopped
    env_file:
      - ./CamerAPP/camerapp/.env
    ports:
      - "3000:4173"
    volumes:
      - "./CamerAPP/camerapp/.env:/camerapp/.env"